%!PS-Adobe-2.0 EPSF-2.0
%%Title: spam-holdout-whole-space-3d.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Thu May  9 15:26:34 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
% Base ISO8859-1 character encoding plus support macros for UTF-8 encoding
% via the glyphshow operator
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def

/Gshow { dup type /stringtype eq { show } { glyphshow } ifelse } def

/Gsall { {Gshow} forall } def
/Gwidth {
	dup currentpoint pop exch
	gsave 6 array currentmatrix nulldevice setmatrix Gsall currentpoint pop grestore sub
	} def
/GLshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/GRshow {currentpoint stroke M dup Gwidth vshift R
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/GCshow {currentpoint stroke M dup Gwidth 2 div vshift R 
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (spam-holdout-whole-space-3d.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (kvafy)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu May  9 15:26:34 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.000 UL
LTb
1133 1119 M
2450 2663 L
6067 2102 M
2450 2663 L
1133 1119 M
0 1959 V
stroke
LTa
1133 1119 M
2450 2663 L
stroke
LTb
1133 1119 M
33 38 V
stroke
1090 1035 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
2450 2663 M
-32 -38 V
stroke
LTa
1736 1026 M
3053 2571 L
stroke
LTb
1736 1026 M
33 38 V
stroke
1693 941 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
3053 2571 M
-32 -38 V
stroke
LTa
2339 932 M
3655 2477 L
stroke
LTb
2339 932 M
33 38 V
stroke
2296 847 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
3655 2477 M
-33 -38 V
stroke
LTa
2942 838 M
4258 2383 L
stroke
LTb
2942 838 M
33 38 V
stroke
2899 754 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 15)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
4258 2383 M
-33 -38 V
stroke
LTa
3545 744 M
4861 2290 L
stroke
LTb
3545 744 M
33 39 V
stroke
3502 660 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 20)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
4861 2290 M
-33 -39 V
stroke
LTa
4147 651 M
5464 2196 L
stroke
LTb
4147 651 M
32 38 V
stroke
4104 566 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 25)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
5464 2196 M
-33 -38 V
stroke
LTa
4750 557 M
6067 2102 L
stroke
LTb
4750 557 M
32 38 V
stroke
4707 472 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 30)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
6067 2102 M
-33 -38 V
stroke
LTa
4750 557 M
1133 1119 L
stroke
LTb
4750 557 M
-59 9 V
stroke
4829 537 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
1133 1119 M
59 -9 V
stroke
LTa
4969 815 M
1353 1377 L
stroke
LTb
4969 815 M
-59 9 V
stroke
5048 794 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10)]
] -66.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
1353 1377 M
59 -9 V
stroke
LTa
5189 1072 M
1572 1634 L
stroke
LTb
5189 1072 M
-59 9 V
stroke
5268 1052 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 20)]
] -66.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
1572 1634 M
59 -9 V
stroke
LTa
5408 1330 M
1792 1892 L
stroke
LTb
5408 1330 M
-59 9 V
stroke
5487 1309 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 30)]
] -66.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
1792 1892 M
59 -9 V
stroke
LTa
5628 1587 M
2011 2149 L
stroke
LTb
5628 1587 M
-59 9 V
stroke
5707 1567 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 40)]
] -66.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
2011 2149 M
59 -9 V
stroke
LTa
5847 1845 M
2231 2407 L
stroke
LTb
5847 1845 M
-59 9 V
stroke
5926 1824 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 50)]
] -66.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
2231 2407 M
59 -9 V
stroke
LTa
6067 2102 M
2450 2663 L
stroke
LTb
6067 2102 M
-59 9 V
stroke
6146 2082 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 60)]
] -66.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
2450 2663 M
59 -9 V
1133 1773 M
63 0 V
stroke
1007 1773 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.86)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
1133 2099 M
63 0 V
stroke
1007 2099 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.87)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
1133 2426 M
63 0 V
stroke
1007 2426 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.88)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
1133 2751 M
63 0 V
stroke
1007 2751 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.89)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
1133 3078 M
63 0 V
stroke
1007 3078 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.9)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
397 2566 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (best accuracy)]
] -66.7 MCshow
grestore
LTb
1.000 UP
% Begin plot #1
1.000 UL
LT0
0 g %pm3d_map_begin
1.000 UL
LT0
0 g .45 g 2571 3690 N 219 159 121 471 -220 -290 h
.6125 g 2691 4030 N 220 355 361 -154 -219 -159 h
.6438 g 3053 4072 N 219 192 302 116 -220 -355 h
.7813 g 3354 4025 N 219 160 301 247 -219 -192 h
.85 g 3655 4240 N 219 356 301 -243 -219 -160 h
.8125 g 3956 4193 N 220 160 301 51 -219 -356 h
.6688 g 4258 4048 N 220 388 603 -583 -220 -160 h
.325 g 4861 3693 N 220 323 1206 -678 -220 -388 h
.4938 g 2351 3400 N 220 160 120 504 -219 -193 h
.6563 g 2472 3871 N 219 127 362 -121 -220 -160 h
.6625 g 2833 3717 N 219 258 302 -15 -219 -127 h
.775 g 3135 3833 N 219 453 301 52 -219 -258 h
.8313 g 3436 4080 N 219 159 301 51 -219 -453 h
.8125 g 3737 3837 N 219 355 301 -145 -219 -159 h
.6562 g 4038 3888 N 219 192 603 -420 -219 -355 h
.2937 g 4641 3305 N 219 289 1206 -775 -219 -192 h
.5125 g 2132 3207 N 219 290 121 504 -220 -290 h
.675 g 2252 3711 N 219 356 362 -187 -219 -290 h
.6562 g 2614 3590 N 220 322 301 19 -219 -356 h
.7562 g 2916 3575 N 219 95 302 279 -220 -322 h
.85 g 3217 3627 N 219 225 301 -79 -219 -95 h
.8438 g 3518 3678 N 219 127 301 -47 -219 -225 h
.7 g 3819 3533 N 220 127 602 -420 -219 -127 h
.3375 g 4422 3113 N 220 192 1206 -840 -220 -127 h
.5375 g 1912 2917 N 220 192 120 439 -219 -127 h
.6438 g 2033 3421 N 220 355 362 -350 -220 -192 h
.65 g 2395 3234 N 219 29 302 345 -220 -355 h
.825 g 2696 3253 N 220 224 301 84 -219 -29 h
.9062 g 2998 3532 N 219 192 302 -47 -220 -224 h
.8938 g 3299 3453 N 219 225 301 -80 -219 -192 h
.7562 g 3600 3406 N 219 258 602 -453 -219 -225 h
.3562 g 4202 2986 N 219 355 1206 -937 -219 -258 h
.55 g 1693 2790 N 219 454 121 177 -220 -192 h
.6562 g 1813 3229 N 219 -36 362 140 -219 -454 h
.7562 g 2175 2879 N 220 127 301 182 -219 36 h
.9 g 2477 3224 N 219 258 302 -47 -220 -127 h
.925 g 2778 3308 N 220 258 301 -47 -219 -258 h
.9125 g 3080 3261 N 219 257 302 -79 -220 -258 h
.7875 g 3381 3181 N 219 127 602 -323 -219 -257 h
.3813 g 3983 2728 N 220 160 1205 -970 -219 -127 h
.575 g 1473 2598 N 110 -35 120 242 -109 -30 h
.7375 g 1594 2775 N 110 -35 362 140 -110 35 h
.8562 g 1956 2915 N 110 194 301 -47 -110 35 h
.9 g 2257 3097 N 110 194 302 -47 -110 -194 h
.925 g 2559 3050 N 110 63 301 84 -110 -194 h
.9375 g 2860 3003 N 110 64 302 -80 -110 -63 h
.8125 g 3162 2924 N 110 193 602 -452 -110 -64 h
.4125 g 3764 2601 N 109 129 1206 -906 -110 -193 h
.6125 g 1364 2568 N 44 117 120 176 -44 -51 h
.7875 g 1484 2810 N 44 52 362 205 -44 -117 h
.8812 g 1846 2950 N 44 19 301 -14 -44 -52 h
.8875 g 2147 2903 N 44 19 302 -47 -44 -19 h
.9125 g 2449 2856 N 44 150 301 -47 -44 -19 h
.9375 g 2750 2940 N 44 84 302 -14 -44 -150 h
.7938 g 3052 2860 N 44 117 602 -485 -44 -84 h
.3562 g 3654 2408 N 44 215 1206 -1004 -44 -117 h
.6312 g 1320 2517 N 22 -105 120 274 -22 7 h
.75 g 1440 2693 N 22 287 362 -187 -22 105 h
.8187 g 1802 2898 N 21 124 302 149 -22 -287 h
.8875 g 2103 2884 N 22 -7 301 84 -21 -124 h
.9125 g 2405 2837 N 21 -7 302 -47 -22 7 h
.925 g 2706 2790 N 22 -7 301 -14 -21 7 h
.7938 g 3008 2776 N 21 -40 603 -452 -22 7 h
.3438 g 3610 2291 N 22 -73 1205 -971 -21 40 h
.6563 g 1298 2524 N 11 46 120 241 -11 -13 h
.7438 g 1418 2798 N 11 -118 362 -23 -11 -46 h
.8 g 1780 2611 N 11 -118 302 149 -11 118 h
.8938 g 2082 2760 N 11 46 301 -80 -11 118 h
.9187 g 2383 2844 N 11 13 302 -14 -11 -46 h
.9375 g 2685 2797 N 11 13 301 -14 -11 -13 h
.825 g 2986 2783 N 11 -52 603 -387 -11 -13 h
.6625 g 1287 2511 N 11 -20 120 241 -11 20 h
.7688 g 1407 2752 N 11 13 362 -56 -11 20 h
.8375 g 1769 2729 N 11 78 302 84 -11 -13 h
.9125 g 2071 2878 N 11 -53 301 51 -11 -78 h
.925 g 2372 2798 N 11 13 302 -80 -11 53 h
.9375 g 2674 2784 N 11 13 301 -14 -11 -13 h
.825 g 2975 2770 N 11 78 603 -452 -11 -13 h
.6562 g 1276 2531 N 11 78 120 209 -11 -46 h
.7625 g 1396 2772 N 11 13 362 9 -11 -78 h
.8312 g 1758 2716 N 11 -20 302 117 -11 -13 h
.9062 g 2060 2800 N 11 78 301 -47 -11 20 h
.925 g 2361 2851 N 11 13 302 -15 -11 -78 h
.9313 g 2663 2771 N 11 45 301 -46 -11 -13 h
.8 g 2964 2757 N 11 45 603 -452 -11 -45 h
.3875 g 3567 2305 N 11 -19 1205 -874 -11 -45 h
%pm3d_map_end
% End plot #1
1.000 UL
LTb
6067 2102 M
4750 557 L
1133 1119 M
4750 557 L
stroke
LCb setrgbcolor
2613 452 M
[ [(Helvetica) 200.0 0.0 true true 0 (Bayesian estimation )]
/Symbol reencodeISO def
[(Symbol) 200.0 0.0 true true 0 (a)]
] -66.7 MCshow
LTb
LCb setrgbcolor
6230 1189 M
[ [(Helvetica) 200.0 0.0 true true 0 (Bayesian score )]
[(Symbol) 200.0 0.0 true true 0 (a)]
] -66.7 MCshow
LTb
LCb setrgbcolor
397 2566 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (best accuracy)]
] -66.7 MCshow
grestore
LTb
stroke gsave	%% draw gray scale smooth box
maxcolors 0 gt {/imax maxcolors def} {/imax 1024 def} ifelse
6329 2213 translate 266 1648 scale 0 setlinewidth
/ystep 1 imax div def /y0 0 def /ii 0 def
{ y0 g 0 y0 N 1 0 V 0 ystep V -1 0 f
/y0 y0 ystep add def /ii ii 1 add def
ii imax ge {exit} if } loop
grestore 0 setgray
1.000 UL
LTb
6329 2213 N
266 0 V
0 1648 V
-266 0 V
0 -1648 V
Z stroke
1.000 UL
LTb
1.000 UL
LTb
6595 2213 M
-63 0 V
stroke
6679 2213 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.86)]
] -46.7 MLshow
1.000 UL
LTb
6329 2213 M
63 0 V
203 206 R
-63 0 V
stroke
6679 2419 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.865)]
] -46.7 MLshow
1.000 UL
LTb
6329 2419 M
63 0 V
203 206 R
-63 0 V
stroke
6679 2625 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.87)]
] -46.7 MLshow
1.000 UL
LTb
6329 2625 M
63 0 V
203 206 R
-63 0 V
stroke
6679 2831 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.875)]
] -46.7 MLshow
1.000 UL
LTb
6329 2831 M
63 0 V
203 206 R
-63 0 V
stroke
6679 3037 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.88)]
] -46.7 MLshow
1.000 UL
LTb
6329 3037 M
63 0 V
203 206 R
-63 0 V
stroke
6679 3243 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.885)]
] -46.7 MLshow
1.000 UL
LTb
6329 3243 M
63 0 V
203 206 R
-63 0 V
stroke
6679 3449 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.89)]
] -46.7 MLshow
1.000 UL
LTb
6329 3449 M
63 0 V
203 206 R
-63 0 V
stroke
6679 3655 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.895)]
] -46.7 MLshow
1.000 UL
LTb
6329 3655 M
63 0 V
203 206 R
-63 0 V
stroke
6679 3861 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9)]
] -46.7 MLshow
1.000 UL
LTb
6329 3861 M
63 0 V
1.000 UP
stroke
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
