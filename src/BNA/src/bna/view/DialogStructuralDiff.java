// Project: Bayesian networks applications (Master's thesis), BUT FIT 2013
// Author:  David Chaloupka (xchalo09)
// Created: 2013/05/06

package bna.view;

import bna.bnlib.BNLibIOException;
import bna.bnlib.BayesianNetwork;
import bna.bnlib.Variable;
import bna.bnlib.misc.Toolkit;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 * Dialog compares structure of two Bayesian networks.
 */
public class DialogStructuralDiff extends javax.swing.JDialog {
    private BayesianNetwork bnReferential,
                            bnOther;
    private String bnReferentialSource = "<not selected>",
                   bnOtherSource = "<not selected>";

    
    public DialogStructuralDiff(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.bnReferential = this.bnOther = null;
        initComponents();
        this.setLocationRelativeTo(this.getParent());
        this.loadConfiguration();
        this.onSelectedNetworksChange();
    }
    
    private void loadConfiguration() {
        MainWindow.getInstance().loadWindowBounds(this, "DialogStructuralDiff");
    }
    
    private void onSelectedNetworksChange() {
        this.labelReferentialNetwork.setText(this.bnReferentialSource);
        this.labelOtherNetwork.setText(this.bnOtherSource);
        
        if(this.bnReferential != null && this.bnOther != null) {
            if(!Toolkit.areEqual(bnReferential.getVariables(), bnOther.getVariables())) {
                String msg = "The two networks have to containt exactly the same variables.";
                JOptionPane.showMessageDialog(this, msg, "Incompatible networks", JOptionPane.ERROR_MESSAGE);
                return;
            }
            // format the diff string
            StringBuilder sb = new StringBuilder();
            BayesianNetwork.StructuralDifference diff = new BayesianNetwork.StructuralDifference(bnReferential, bnOther);
            sb.append(String.format("Missing edges (%d)\n", diff.getMissingEdges().size()));
            for(Variable[] edge : diff.getMissingEdges())
                sb.append(String.format(" * %s -> %s\n", edge[0].getName(), edge[1].getName()));
            sb.append("\n");
            sb.append(String.format("Reversed edges (%d)\n", diff.getReversedEdges().size()));
            for(Variable[] edge : diff.getReversedEdges())
                sb.append(String.format(" * %s -> %s\n", edge[0].getName(), edge[1].getName()));
            sb.append("\n");
            sb.append(String.format("Redundant edges (%d)\n", diff.getRedundantEdges().size()));
            for(Variable[] edge : diff.getRedundantEdges())
                sb.append(String.format(" * %s -> %s\n", edge[0].getName(), edge[1].getName()));
            this.textPaneResults.setText(sb.toString());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        labelPath = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        buttonLoadRefentialFromFile = new javax.swing.JButton();
        labelReferentialNetwork = new javax.swing.JLabel();
        labelOtherNetwork = new javax.swing.JLabel();
        buttonLoadOtherFromFile = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textPaneResults = new javax.swing.JTextPane();
        buttonCurrentAsOther = new javax.swing.JButton();
        buttonCurrentAsReferential = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Structural difference");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                formComponentMoved(evt);
            }
        });

        labelPath.setText("Referential network:");

        jLabel1.setText("Other network:");

        buttonLoadRefentialFromFile.setText("Load from file");
        buttonLoadRefentialFromFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLoadRefentialFromFileActionPerformed(evt);
            }
        });

        buttonLoadOtherFromFile.setText("Load from file");
        buttonLoadOtherFromFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLoadOtherFromFileActionPerformed(evt);
            }
        });

        jLabel2.setText("Results");

        jScrollPane1.setViewportView(textPaneResults);

        buttonCurrentAsOther.setText("Set current network");
        buttonCurrentAsOther.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCurrentAsOtherActionPerformed(evt);
            }
        });

        buttonCurrentAsReferential.setText("Set current network");
        buttonCurrentAsReferential.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCurrentAsReferentialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonCurrentAsReferential, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(buttonLoadRefentialFromFile, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonCurrentAsOther, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonLoadOtherFromFile, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 172, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelPath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelReferentialNetwork, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelOtherNetwork, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelPath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelReferentialNetwork, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonLoadRefentialFromFile)
                    .addComponent(buttonCurrentAsReferential))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(labelOtherNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCurrentAsOther)
                    .addComponent(buttonLoadOtherFromFile))
                .addGap(30, 30, 30)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentMoved
        MainWindow.getInstance().saveWindowBounds(this, "DialogStructuralDiff");
    }//GEN-LAST:event_formComponentMoved

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        MainWindow.getInstance().saveWindowBounds(this, "DialogStructuralDiff");
    }//GEN-LAST:event_formComponentResized

    private void buttonCurrentAsReferentialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCurrentAsReferentialActionPerformed
        BayesianNetwork bn = this.loadCurrent();
        if(bn != null) {
            this.bnReferential = bn;
            this.bnReferentialSource = "copied from the main window";
            this.onSelectedNetworksChange();
        }
    }//GEN-LAST:event_buttonCurrentAsReferentialActionPerformed

    private void buttonLoadRefentialFromFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLoadRefentialFromFileActionPerformed
        NetworkFromFile bnFromFile = this.loadFromFile();
        if(bnFromFile != null) {
            this.bnReferential = bnFromFile.bn;
            this.bnReferentialSource = bnFromFile.file;
            this.onSelectedNetworksChange();
        }
    }//GEN-LAST:event_buttonLoadRefentialFromFileActionPerformed

    private void buttonCurrentAsOtherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCurrentAsOtherActionPerformed
        BayesianNetwork bn = this.loadCurrent();
        if(bn != null) {
            this.bnOther = bn;
            this.bnOtherSource = "copied from the main window";
            this.onSelectedNetworksChange();
        }
    }//GEN-LAST:event_buttonCurrentAsOtherActionPerformed

    private void buttonLoadOtherFromFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLoadOtherFromFileActionPerformed
        NetworkFromFile bnFromFile = this.loadFromFile();
        if(bnFromFile != null) {
            this.bnOther = bnFromFile.bn;
            this.bnOtherSource = bnFromFile.file;
            this.onSelectedNetworksChange();
        }
    }//GEN-LAST:event_buttonLoadOtherFromFileActionPerformed

    class NetworkFromFile {
        public BayesianNetwork bn;
        public String file;
        public NetworkFromFile(BayesianNetwork bn, String file) {
            this.bn = bn;
            this.file = file;
        }
    }
    
    private BayesianNetwork loadCurrent() {
        BayesianNetwork bn = MainWindow.getInstance().getActiveNetwork();
        if(bn == null) {
            String msg = "There is no active network to be loaded.";
            JOptionPane.showMessageDialog(this, msg, "Unable to set network", JOptionPane.ERROR_MESSAGE);
        }
        return bn;
    }
    
    private NetworkFromFile loadFromFile() {
        // pick the file and remember last directory
        MainWindow mw = MainWindow.getInstance();
        String lastNetworkDirectory = mw.getConfiguration("Network", "directory");
        if(lastNetworkDirectory == null)
            lastNetworkDirectory = ".";
        JFileChooser networkFileChooser = new JFileChooser(lastNetworkDirectory);
        networkFileChooser.setFileFilter(new FileNameExtensionFilter("Net file", "net"));
        networkFileChooser.setDialogTitle("Load a Bayesian network from file");
        networkFileChooser.showOpenDialog(this);
        if(networkFileChooser.getSelectedFile() == null)
            return null;
        mw.setConfiguration("Network", "directory", networkFileChooser.getSelectedFile().getParent());
        // attempt to load the network
        NetworkFromFile networkFromFile;
        try {
            String file = networkFileChooser.getSelectedFile().getPath();
            BayesianNetwork bn = BayesianNetwork.loadFromFile(file);
            networkFromFile = new NetworkFromFile(bn, file);
            
        }
        catch(BNLibIOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "I/O error while loading the network", JOptionPane.ERROR_MESSAGE);
            networkFromFile = null;
        }
        return networkFromFile;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCurrentAsOther;
    private javax.swing.JButton buttonCurrentAsReferential;
    private javax.swing.JButton buttonLoadOtherFromFile;
    private javax.swing.JButton buttonLoadRefentialFromFile;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelOtherNetwork;
    private javax.swing.JLabel labelPath;
    private javax.swing.JLabel labelReferentialNetwork;
    private javax.swing.JTextPane textPaneResults;
    // End of variables declaration//GEN-END:variables
}
